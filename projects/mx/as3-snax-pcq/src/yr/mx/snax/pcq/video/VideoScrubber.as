package yr.mx.snax.pcq.video {	import flash.display.*;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.text.TextField;	public class VideoScrubber extends MovieClip {		private var duration:Number;		private var currentTime:Number;		private var progressBar:MovieClip;		private var seekBar:MovieClip;		private var timeMc:MovieClip;		private var tField:TextField;		private var initWidth:Number;		private var seconds:Number;		public function VideoScrubber() {			init();		}		public function set durr(inNum:Number):void {			duration = inNum;		}		public function get durr():Number {			return duration;		}		public function set currTime(inNum:Number):void {			currentTime = inNum;			setSeekProgress();		}		public function get currTime():Number {			return currentTime;		}		public function set sec(inNum:Number):void {			seconds = inNum;		}		public function get sec():Number {			return seconds;		}		/*		method:init		Parameters:		returns:		 */		private function init():void {			progressBar = pBar;			seekBar = sBar;			timeMc = tIndicator;			timeMc.y = - (timeMc.height - 4);			timeMc.alpha = 0;			tField = tIndicator.txtField;			initWidth = seekBar.width;			seekBar.buttonMode = true;			seekBar.addEventListener(MouseEvent.MOUSE_DOWN, seekBarClicked);			seekBar.addEventListener(MouseEvent.MOUSE_OVER, seekBarRollOver);			seekBar.addEventListener(MouseEvent.MOUSE_MOVE, seekBarRollOver);			seekBar.addEventListener(MouseEvent.MOUSE_OUT, seekBarRollOut);		}		/*		method:seekBarRollOut		Parameters:		event:MouseEvent		returns:		 */		private function seekBarRollOut(event:MouseEvent):void {			timeMc.alpha = 0;		}		/*		method:updateProgress		Parameters:		event:MouseEvent		returns:		 */		private function seekBarRollOver(event:MouseEvent):void {			timeMc.alpha = 1;			timeMc.x = this.mouseX - timeMc.width / 2;			var pcent:* = this.mouseX / initWidth;			var sec:* = pcent * duration;			var time:String = formatTime(sec);			tField.text = time;		}		/*		method:updateProgress		Parameters:		event:MouseEvent		returns:		 */		private function seekBarClicked(event:MouseEvent):void {			var pcent:* = this.mouseX / initWidth;			seconds = pcent * duration;			dispatchEvent(new Event(Event.CHANGE));		}		/*		method:setSeekProgress		Parameters:		returns:		 */		private function setSeekProgress():void {			var pcent:* = currentTime / duration;			if (pcent > 0) {				progressBar.width = initWidth * pcent;			}		}		/*		method:formatTime		Parameters:		time:Number		returns:String		 */		private function formatTime(time:Number):String {			var remainder:Number;			var hours:Number = time / ( 60 * 60 );			remainder = hours - (Math.floor(hours));			hours = Math.floor(hours);			var minutes:* = remainder * 60;			remainder = minutes - (Math.floor(minutes));			minutes = Math.floor(minutes);			var seconds:* = remainder * 60;			remainder = seconds - (Math.floor(seconds));			seconds = Math.floor(seconds);			var hString:String = hours < 10 ? "0" + hours: "" + hours;			var mString:String = minutes < 10 ? "0" + minutes: "" + minutes;			var sString:String = seconds < 10 ? "0" + seconds: "" + seconds;			if ( time < 0 || isNaN(time)) return "00:00";			if ( hours > 0 ) {				return hString + ":" + mString + ":" + sString;			} else {				return mString + ":" + sString;			}		}	}}